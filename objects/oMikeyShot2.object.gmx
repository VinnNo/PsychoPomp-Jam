<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMikeyRocketShot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-201</depth>
  <persistent>0</persistent>
  <parentName>oParEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>contactDamage = 1;

vx = 0;
vy = 0;

m = 0.2;

hpMax = 1;

event_inherited();
enemyWalkerCreate();

state = idle;
nState = true;

idleTime = 0;
idleTimeMax = 80;
chaseTime = 0;
chaseTimeMax = 240;

turnSpeed = 0.4;

spd = 0;
spdMax = 1.2;
startup = 0.08;

pathDir = 0;
pathDiff = 0;
dir = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement

//Limit Speeds
if ( vx &gt; 0 )
{
    if ( vx &gt; spdMax )
    {
        vx = spdMax;
    }
}

if ( vx &lt; 0 )
{
    if ( vx &lt; spdMax )
    {
        vx = -spdMax;
    }
}

if ( vy &gt; 0 )
{
    if ( vy &gt; spdMax )
    {
        vy = spdMax;
    }
}

if ( vy &lt; 0 )
{
    if ( vy &lt; spdMax )
    {
        vy = -spdMax;
    }
}

//Actual Movement
x += vx;
y += vy;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i;
for (var i = 0; i &lt; 2; i++)
instance_create(x, y, oFxDust);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///System

//Get Position
if ( state == idle )
{
    image_angle = 90;
    vy -= spdMax/startup;
    coolDownTimer += 1;
    if ( coolDownTimer == 40)
    {
        state = attacking1;
    }
}

if ( state == attacking1 )
{
    chaseTime += 1;
    if ( chaseTime &lt; chaseTimeMax )
    {
        if ( instance_exists(oPlayer) )
        {
            pathDir      = point_direction(x, y, oPlayer.x, oPlayer.y);
            pathDiff     = angle_difference(pathDir, image_angle);
        }
        image_angle += median(-20, pathDiff, 20)/4;
        dir = image_angle;
    }

    vx += lengthdir_x(spdMax, image_angle)/startup;
    vy += lengthdir_y(spdMax, image_angle)/startup;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    other.baddieID = id;
    with (other)
    {
        playerGetHit();
    }
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
