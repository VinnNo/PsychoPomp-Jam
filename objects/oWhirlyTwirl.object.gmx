<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sWhirlyBase</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-201</depth>
  <persistent>0</persistent>
  <parentName>oParEnemy</parentName>
  <maskName>sSkeletonMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//************(Mandatory variables)*************\\
contactDamage = 1;  //Damage to oPlayer

hpMax = 4;          //Starting HP

m = 0.2;            //Over all movement

//Set Generic Variables             
enemyWalkerCreate();

//**********(Set custom physics here)*************\\
windFactor = 0;
windFactorMax = 4;
windCall = false;

up          = "up";
upLeft      = "upLeft";
upRight     = "upRight";

down        = "down";
downLeft    = "downLeft";
downRight   = "downRight";

left        = "left";
right       = "right";
blank       = "blank";

windDir = blank;

waitTime    = 0;
delayMax    = 0;
delay1      = 60;
delay2      = 80;
delay3      = 120;



//**********(Death events)*************************\\
deathSeq = sSkeletonDie;
oName = "Skeleton";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enemyDestroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn at Ledges
hasTurned = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
enemyWalkerCollision();
if ( turnAtLedge == true )
{
    enemyWalkerCheckLedges(0);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Procedural Animation

xscale = Approach(xscale, 1, 0.05);
yscale = Approach(yscale, 1, 0.05);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///PreAction
//Life Check
if (hp &lt;= 0)
instance_destroy();

onGround = OnGround();

//A change in the winds
if ( !foundHim )
{
    coolDownTimer += 1;
}

if ( coolDownTimer == coolDownTimerMax )
{
    windCall = false;
    coolDownTimer = 0;
}

if ( windCall )
{
    waitTme += 1;
}

if ( waitTime == delayMax )
{
    if ( windFactor &lt; windFactorMax )
    {
        windFactor = windFactorMax;
    }
    
    if ( windFactor == 0 )
    {
        
        windFactor += choose(1, 2, 0);
    }
    else if ( windFactor == 1 )
    {
        windFactor += choose(1, 2, 0);
        subState = true;
    }
    else if ( windFactor == 2 )
    {
        windFactor += choose(1, 2, 0, -1);
        subState = true;
    }
    else if ( windFactor == 3 )
    {
        windFactor += choose(1, 0, -1, -2);
        subState = true;
    }
    else if ( windFactor == 4 )
    {
        windFactor += choose(0, -1, -2, -3);
        subState = true;
    }
    delayMax = choose(delay1, delay2, delay3);
    waitTime = 0;   
}



var onGroundPrev = onGround;
if (onGround &amp;&amp; !onGroundPrev) 
{
    // Squash + stretch
    xscale = 1.5;
    yscale = 0.5;
    // Dust particles
    for (var i = 0; i &lt; 4; i++)
        instance_create(random_range(bbox_left, bbox_right), bbox_bottom, oFxDust);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///System
onGround = OnGround();

if ( state == idle )
{
    if ( nState == true )
    {
        sprite_index = sWhirlyBase;
        image_index = 0;
        coolDownTimer = 0;
        waitTime = 0;
        kLeft = false;
        kRight = false;
        nState = false;
    }
    if ( windFactor &lt; windFactorMax )
    {
        windFactor = windFactorMax;
    }
    
    if ( windFactor == 0 )
    {
        image_speed = 0.10;
    }
    else if ( windFactor == 1 )
    {
        image_speed = 0.13;
    }
    else if ( windFactor == 2 )
    {
        image_speed = 0.16;
    }
    else if ( windFactor == 3 )
    {
        image_speed = 0.20;
    }
    else if ( windFactor == 4 )
    {
        image_speed = 0.25;
    }
}
else if ( state == walking )
{
    if ( nState == true )
    {
        sprite_index = sWhirlyBase;
        image_index = 0;
        waitTime = 0;
        coolDownTimer = 0;
        nState = true;
    }
    
    sightRadius();
    if ( foundHim )
    {
        if ( !windCall )
        {
            windCall = true;
            enemyFacePlayer(0);
            state = idle;
            nState = true;
        }
    }
    enemyWalkerDirection();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///General Step
enemyWalkerStep();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPlayerShot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oMeleeAttack_Player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ledgeTestsDraw();
draw_sprite_ext(sprite_index, image_index, x, y + (16 - 16 * yscale) * 0.25, facing * xscale, yscale, 0, c_white, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
