<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSorcererShotBlob1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>oParEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>contactDamage = 2;

hpMax = 3;
hp = hpMax;

spd = 1.5;

RIGHT = 1;
LEFT = -1;

cooldownTimer = 0;
shootTime = 60;

shotScale = 1;

floatTime = 0;
floatMax = 20;
floatRate = 0.4;

floatUp = true;
floatDown = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp -= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (goodtoGo &amp;&amp; frozen == false )
{
    if (inView)
    {
        if ( floatUp == true )
        {
            y -= floatRate;
            floatTime += 1;
            if ( floatTime == floatMax )
            {
                floatUp = false;
                floatDown = true;
                floatTime = 0;
            }
        }
        else if (floatDown == true)
        {
            y+=floatRate;
            floatTime+=1;
            if ( floatTime == floatMax )
            {
                floatDown = false;
                floatUp = true;
                floatTime = 0;
            }
        }
        x += spd*image_xscale;
        cooldownTimer += 1;
        if (cooldownTimer == shootTime)
        {
            var shootID;
            shootID = instance_create(x, y, oSorcMiniShot);
            shootID.dir = 45;
            shootID.image_xscale = shotScale;
            shootID.image_yscale = shotScale;
            
            shootID = instance_create(x, y, oSorcMiniShot);
            shootID.dir = -45;
            shootID.image_xscale = shotScale;
            shootID.image_yscale = shotScale;
            
            shootID = instance_create(x, y, oSorcMiniShot);
            shootID.dir = 0;
            shootID.image_xscale = shotScale;
            shootID.image_yscale = shotScale;
            
            shootID = instance_create(x, y, oSorcMiniShot);
            shootID.dir = 135;
            shootID.image_xscale = shotScale;
            shootID.image_yscale = shotScale;
            
            shootID = instance_create(x, y, oSorcMiniShot);
            shootID.dir = -135;
            shootID.image_xscale = shotScale;
            shootID.image_yscale = shotScale;
            
            shootID = instance_create(x, y, oSorcMiniShot);
            shootID.dir = 180;
            shootID.image_xscale = shotScale;
            shootID.image_yscale = shotScale;
            
            cooldownTimer = 0;
            alarm[0] = 1;
        }
        
        if ( hp == 3 )
        {
            sprite_index = sSorcererShotBlob1;
            image_speed = 0.25;
            shotScale = 1;
        }
        else if ( hp == 2 )
        {
            sprite_index = sSorcererShotBlob2;
            image_speed = 0.25;
            shotScale = 0.75;
        }
        else if ( hp == 1 )
        {
            sprite_index = sSorcererShotBlob3;
            image_speed = 0.25;
            shotScale = 0.5;
        }
        else
        {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
