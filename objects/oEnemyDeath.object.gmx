<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-201</depth>
  <persistent>0</persistent>
  <parentName>oParEntity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hpMax = 99;
contactDamage = 0;
m = 0.4;
enemyWalkerCreate();
gravFall = 1.0 * m;
vxMax = 3.5 * m;

canMove = true;
oName = noone;
baseValue = 85;
if ( oPlayer.x &gt; x )
{
    bumpDir = -1;
}
else
{
    bumpDir = 1;
}
rotDir = 4;

vy = -jumpHeight;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if (random(100) &gt; baseValue)
{
    instance_create(x, y, choose(oManaPickupSmall, oHealthPickupSmall));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//generalCollision()
image_angle += rotDir * bumpDir;
/// Handle sub-pixel movement
cx += vx;
cy += vy;
vxNew = round(cx);
vyNew = round(cy);
cx -= vxNew;
cy -= vyNew;

jumped = false;
landed = false;

repeat(abs(vyNew)) 
{
        y += sign(vy);
}
repeat(abs(vxNew))
{
    x += sign(vx);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death Anims
if (onGround) {  
    tempAccel = groundAccel;
    tempFric  = groundFric;
} else {
    tempAccel = airAccel;
    tempFric  = airFric;
}

if (vy &lt; 0)
    vy = Approach(vy, vyMax, gravRise);
else
    vy = Approach(vy, vyMax, gravFall);

if ( bumpDir == 1 )
{
    kRight = true;
}
else
{
    kLeft = true;
}

if (kLeft) {
    facing = LEFT;
    
    // Apply acceleration left
    if (vx &gt; 0)
        vx = Approach(vx, 0, tempFric);   
    vx = Approach(vx, -vxMax, tempAccel);
// Right
} else if (kRight) {
    facing = RIGHT;
    
    // Apply acceleration right
    if (vx &lt; 0)
        vx = Approach(vx, 0, tempFric);   
    vx = Approach(vx, vxMax, tempAccel);
}
/*
enemyDeath();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death Effect
/*
if (sprite_index != -1)
{
    var i, deathID;
    if ( sprite_index == sDartEyeDie )
    {
        //audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 4; ++i)
        {
            deathID = instance_create(x, y, oDartEyeDeathShot)
            //deathID.oName = oName;
            deathID.direction = random(360);
            deathID.spd = random_range(3, 6);
        }
    }
    else
    {
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }
    
        
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death Effect OLD1
/*
if (sprite_index != -1)
{
    var i, deathID;
    
    if ( sprite_index == sSkeletonDie )
    {
        
        //audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }
    
    if ( sprite_index == sSlaughDie )
    {
        
        //audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }

    if ( sprite_index == sGhastDie )
    {
        
        //audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }

    if ( sprite_index == sDartEyeDie )
    {
        //audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 4; ++i)
        {
            deathID = instance_create(x, y, oDartEyeDeathShot)
            //deathID.oName = oName;
            deathID.direction = random(360);
            deathID.spd = random_range(3, 6);
        }
    }
    
    if ( sprite_index == sSnailDie )
    {
        
        //audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }
        
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death Effect Old2
/*
if (sprite_index != -1)
{
    var i, deathID;
    if (sprite_index == sPoltoDie)
    {
        instance_create(xprevious, yprevious-3, oPoof1);
    }
    
    if ( sprite_index == sSkeletonDie )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }
    
    if ( sprite_index == sGoblinDie )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }
    
    if ( sprite_index == sMinoDie )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 32; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
        for (i = 0; i &lt; 32; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-20, 20), oBones)
    }
    
    if ( sprite_index == sSkelombieDie )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-20, 20), oBones)
    }
    
    if ( sprite_index == sMuncherDie )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }
    
    if ( sprite_index == sLotusDie )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }
    
    if ( sprite_index == sDemonDie )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }
    
    if ( sprite_index == sFlyEyeDie )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }
    
    if ( sprite_index == sSpawnMinionDie )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
        for (i = 0; i &lt; 16; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-20, 20), oBones)
    }
    
    if ( sprite_index == sBigSlime1 )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 2; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious - random_range(5, 12), oMedSlime1);
    }
    
    if ( sprite_index == sMedSlimeDie )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 2; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious - random_range(5, 12), oMiniSlime1);
    }
    
    if ( sprite_index == sSmallSlimeDie )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 8; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }
    
    if ( sprite_index == sLaserSlimeDie )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 8; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }
    
    if ( sprite_index == sCrystalBallDieTop )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 8; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }

    if ( sprite_index == sCrystalBallDie )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 8; ++i) 
        instance_create(xprevious + random_range(-12, 12), yprevious + random_range(-12, 12), oBones);
    }
    
    if ( sprite_index == sDartEyeDie )
    {
        audio_play_sound(aSkelePop, 0, false);
        for (i = 0; i &lt; 4; ++i)
        {
            deathID = instance_create(x, y, oDartEyeDeathShot)
            deathID.direction = random(360);
            deathID.spd = random_range(3, 6);
        }
    }
        
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index != -1)
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
