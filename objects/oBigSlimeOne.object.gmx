<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sBigSlimeOneIdle</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>oParEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stuff
canMove = true;
contactDamage = 1;
hpMax = 6;
hp = hpMax;
h = 0;
v = 0;
spd = 0.75;
Fric = 2;
Accel = 1;
dir = 1;
dir = image_xscale;
hasHead = true;

walking = "walking";
shoot = "shoot";
hitshock = "hitshock";

state = walking;
animStateSwitch = false;

cooldownTimer = 0;
shootTime = 30;

shotCount = 0;
shotCountMax = 1;

foundHim = false;

hSight = 8*16;
vSight = 4*16;

xscalePrev = 0;

skullID = noone;

deathSeq = sBigSlimeOneDie;
oName="BigSlimeOne";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death Effect
if (frozen == false){

if ( skullID != noone )
{
    with (skullID)
    {
        instance_destroy();
    }
}
var ID;
ID = instance_create(xprevious,yprevious,oEnemyDeath);
ID.oName = oName;
ID.sprite_index = deathSeq;
ID.image_xscale=image_xscale;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Life Check
if (hp &lt;= 0)
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision
// Actual collision checks + movement
if (frozen == false){
var i;

// Vertical
for (i = 0; i &lt; abs(v); ++i) {
    if (!place_meeting(x, y + sign(v), oParSolid))
        y += sign(v);
    else {
        v = 0;
        break;
    }
}

// Horizontal
for (i = 0; i &lt; abs(h); ++i) {
    // UP slope
    if (place_meeting(x + sign(h), y, oParSolid) &amp;&amp; !place_meeting(x + sign(h), y - 1, oParSolid))
        --y;
    
    // DOWN slope
    if (!place_meeting(x + sign(h), y, oParSolid) &amp;&amp; !place_meeting(x + sign(h), y + 1, oParSolid) &amp;&amp; place_meeting(x + sign(h), y + 2, oParSolid))
        ++y;      
        
    if (!place_meeting(x + sign(h), y, oParSolid))
        x += sign(h); 
}
}
///////////////////////////////////////////////////////////////////////////////

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///System
if (goodtoGo &amp;&amp; frozen == false)
{

    if ( state == walking )
    {
        sightRadius();
        if (foundHim == true)
        {
            xscalePrev = image_xscale;
            animStateSwitch = true;
        }
        if (!place_meeting( x+image_xscale, y-3, oParSolid)
        &amp;&amp; !place_meeting( x+image_xscale, y-3, oEnBlocker) )
        {
            h = image_xscale * 0.05;
            x += h;
        }
        else
        {
            h = 0;
        }
    
               
        if (h == 0)
        {
            if (place_meeting(x+1,y,oParSolid) &amp;&amp; place_meeting(x-1,y,oParSolid))
            {
                image_index=1;
                image_speed=0;
            }
            else
            {
                image_xscale = -image_xscale;
            }
        }
        sprite_index = sBigSlimeOneWalk;
        image_speed = 0.25;
    }
    else if ( state == shoot )
    {
        h = 0;
        sprite_index = sBigSlimeOneAttack;
        image_speed = 0.25;
    
        if ( xscalePrev == 0 )
        {
            xscalePrev = image_xscale;
        }
    
        if (oPlayer.x &gt; x)
        {
            image_xscale = 1;
        }
        else
        {
            image_xscale = -1;
        }
    }
    else if ( state == hitshock )
    {
        h = 0;
        sprite_index = sBigSlimeOneHit;
        image_speed = 0.5;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oEnBlocker">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( dir == 1 )
{
    dir = -1;
}
else
{
    dir = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPlayerShot">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
state = hitshock;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oMeleeAttack_Player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
state = hitshock;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>oBigSlimeOne</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( sprite_index == sBigSlimeOneWalk )
{
    if (animStateSwitch == true)
    {
        state = shoot;
        animStateSwitch = false;
    }
}

if ( sprite_index = sBigSlimeOneHit )
{
    sightRadius();
    if ( foundHim == true )
    {
        if ( random(100) &gt; 80)
        {
            state = shoot;
        }
        else
        {
            state = walking;
        }
    }
    else
    {
        state = walking;
    }
}

if ( sprite_index == sBigSlimeOneAttack )
{
    var BlobID;
    {
        if ( shotCount &lt;= shotCountMax )
        {
            BlobID = instance_create(x+image_xscale*2, y-3, oBigSlimeOneSpit1)
            BlobID.image_xscale = image_xscale;
            BlobID.creatorID = id;
            image_xscale = xscalePrev;
            xscalePrev = 0;
            shotCount += 1;
        }
        else
        {
            BlobID = instance_create(x+image_xscale*2, y-3, oBigSlimeOneSpit2)
            BlobID.image_xscale = image_xscale;
            BlobID.creatorID = id;
            image_xscale = xscalePrev;
            xscalePrev = 0;
        }
        if (random(100)&gt;80)
        {
            state = shoot;
        }
        else
        {
            state = walking;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
/*
draw_set_font(sFont);
draw_set_halign(true);
draw_text(x,y-30,"Timer: "+string(cooldownTimer));
draw_text(x,y-50,"FoundYou: "+string(foundHim));
//draw_text(x,y-80,"UpClose: "+string(isClose));
//draw_text(x-10, y-84,"facing: "+string(facing));
draw_set_halign(false);
draw_set_color(c_purple);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
