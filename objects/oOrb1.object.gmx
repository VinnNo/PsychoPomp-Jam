<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sOrb1Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>contactDamage = 1;

hpMax = 3;
hp = hpMax;

coolDownTimer = 0;
coolDownTimerMax = 30;

dirAngle = 0;
canTurn = true;
turnUp = false;
turnDown = true;

idle = "idle";
turning = "turning";
shooting = "shooting";

state = idle;
nState = true;
animStateSwitch = true;

deathSeq = sOrb1Die;
oName = "OrbOne";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///System
if ( frozen == false )
{
    //if ( outside_view )
    //{
        //state = idle;
        //cooldownTimer = 0;
    //}
    
    if ( 0 )
    {
        if ( state == idle )
        {
            if ( nState == true )
            {
                sprite_index = sOrb1Idle;
                image_index = 0;
                image_speed = 0.15;
                coolDownTimer = 0;
                animStateSwitch = true;
            }
            image_speed = 0.15;
        }
        else if ( state == turning )
        {
            if ( nState == true ) 
            {
                sprite_index = sOrb1Idle;
                image_index = 0;
                image_speed = 0.10;
                coolDownTimer = 0;
            }
            
            if ( !canTurn )
            {
                if ( dirAngle == image_angle )
                {
                    CanTurn = true;
                }
                
            }
            else
            {
                if ( turnDown )
                {
                    image_angle += 1;
                }
                else
                {
                    image_angle -= 1;
                }
            
                if ( image_angle = 45
                || image_angle == 0
                || image_angle == -45 )
                {
                    canTurn = false;
                    state = shooting;
                    nState = true;
                }
            }
            image_speed = 0.10;
        }
        else if ( state == shooting )
        {
            if ( nState == true )
            {
                sprite_index = sOrb1Shoot;
                image_index = 0;
                image_speed = 0.75;
                coolDownTimer = 0;
                nState = false;
            }
        }
    }
    image_speed = 0.10;
}
else
{
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = turning;
nState = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( sprite_index == sOrb1Idle )
{
    if ( animStateSwitch == true )
    {
        if ( image_angle == 45 )
        {
            turnUp = true;
            turnDown = false;
            state = turning;
            nState = true;
        }
        else if ( image_angle == -45 )
        {
            turnUp = false;
            turnDown = true;
            state = turning;
            nState = true;
        }
    }
}

if ( sprite_index == sOrb1Shoot )
{
    state = idle;
    nState = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_set_font(sFont);
draw_set_halign(true);
draw_text(x,y-30,"State: "+string(state));
//draw_text(x-10, y-84,"facing: "+string(facing));
draw_set_halign(false);
draw_set_color(c_purple);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
