<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sKitKatHappy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-201</depth>
  <persistent>0</persistent>
  <parentName>oParEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canMove = true;

contactDamage = 1;

hpMax = 2;
hp = hpMax;

//How many blocks we can see
hSight = 4*16;
vSight = 4*16;
found_him = false;

spd = 1;
spd2 = 3.5;
dir = image_xscale;
pathDir = 0;

waitDelay = 0;
waitDelayMax = 30;
canAttack = true;

fadeIn  = "fadeIn"
fadeOut = "fadeOut";
hiding  = "hiding";
flying  = "flying";
attacking = "attacking";
idle = "idle";

state = idle;
nState = true;
animStateSwitch = false;

oName = "KitKat";
deathSeq = sKitKatDie;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death Effect
var ID;
ID = instance_create(xprevious,yprevious,oEnemyDeath);
ID.oName = oName;
ID.sprite_index = deathSeq;
ID.image_xscale=image_xscale;
ID.baseValue -= 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canAttack = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Life Check
if (hp &lt;= 0)
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///System
if ( goodtoGo &amp;&amp; frozen == false )
{
    if ( oPlayer.x &gt; x )
    {
        dir = 1;
    }
    else
    {
        dir = -1;
    }
    
    image_xscale = dir;
    
    sightRadius();
    if ( foundHim == true )
    {
        if ( state != attacking )
        {
            if ( canAttack == true )
            {
                state = attacking;
                nState = true;
                //canAttack = false;
            }
        }
        else
        {
            if ( canAttack == false )
            {
                state = flying;
                nState = true;
                if ( alarm[0] != -1 )
                {
                    alarm[0] = 60;
                }
            }
        }
    }
    
    if ( state == idle )
    {
        if ( nState == true )
        {
            pathDir = point_direction(x, y, oPlayer.x, oPlayer.y-5);
            state = flying;
        }
    }
    else if ( state == flying )
    {
        if ( nState == true )
        {
            sprite_index = sKitKatAngry;
            image_speed = 0.1;
            waitDelay = 0;
            nState = false;
        }
        if (oPlayer.x &gt;= x &amp;&amp; oPlayer.facing==-1) 
        {
            waitDelay+=1
            //if ( waitDelay == waitDelayMax)
            //{
                //waitDelay = 0;
                state=fadeOut;
                nState = true;
            //}
        }
        else if (oPlayer.x &lt;= x &amp;&amp; oPlayer.facing==1)
        {
            //waitDelay+=1
            //if ( waitDelay == waitDelayMax)
            //{
                //waitDelay = 0;
                state=fadeOut;
                nState = true;
            //}
        }
        else
        {
            waiting = false;
            pathDir = point_direction(x, y, oPlayer.x, oPlayer.y-5);
            x += lengthdir_x(spd, pathDir);
            y += lengthdir_y(spd, pathDir);
            /*
            if random(100 &gt; 95)
            var ID; 
            ID = instance_create(x,y,oGhostPuff);
            ID.direction = random(180);
            */
            if ( image_alpha &gt;= 50 )
            {
                image_alpha -= 0.5;
            }
            else
            {
                image_alpha += 0.5;
            }
        sprite_index = sKitKatAngry;
        image_speed = 0.1;
        }
    }
    else if ( state == fadeOut )
    {
        if ( nState == true )
        {
            sprite_index = sKitKatHappy;
            image_index = 0;
            nState = false;
        }
        sprite_index = sKitKatHappy ;
        image_speed = 0.2;
    }
    else if ( state == hiding )
    {
        if ( nState == true )
        {
            sprite_index = sKitKatHappy;
            image_speed = 0;
            //contactDamage = 0;
            nState = false;
        }
        if (oPlayer.x &lt;= x &amp;&amp; oPlayer.facing==-1) 
        {
            state=fadeIn;
            nState = true;
        }
        else if (oPlayer.x &gt;= x &amp;&amp; oPlayer.facing==1)
        {
            state=fadeIn;
            nState = true;
        }
        image_speed = 0.2;
    }
    else if ( state == fadeIn )
    {
        if ( nState == true )
        {
            sprite_index = sKitKatAngry;
            image_index = 0;
            nState = false;
        }
        sprite_index = sKitKatAngry
        image_speed = 0.2;
    }
    else if ( state == attacking )
    {
        if ( nState == true )
        {
            sprite_index = sKitKatBite;
            image_index = 0;
            nState = false;
        }
        sprite_index = sKitKatBite;
        image_speed = 0.3;
        pathDir = point_direction(x, y, oPlayer.x, oPlayer.y-5);
        x += lengthdir_x(spd2, pathDir);
        y += lengthdir_y(spd2, pathDir);
    }
}
else
{
    image_speed = 0;
}        
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ( sprite_index == sKitKatHappy )
{
    if ( animStateSwitch == true )
    {
        state = fadeOut;
        nState = true;
        animStateSwitch = false;
    }
}

if ( sprite_index == sKitKatHappy )
{
    state = hiding;
    nState = true;
}

if ( sprite_index == sKitKatAngry )
{
    state = idle;
    nState = true;
}

if ( sprite_index == sKitKatBite )
{
    state = flying;
    nstate = true;
    foundHim = false;
    canAttack = false;
    alarm[0] = 60;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index != -1)
{
/*
    if (state == idle)
    {
        sprite_index = sKitKatHappy;
        image_speed = 0.1;
    }
*/
    
        
    draw_self();
    //draw_sprite_ext(sprite_index, image_index, x, y, dir, image_yscale, 0, c_white, image_alpha);
}

//draw_set_font(sFont);
//draw_set_halign(true);
//draw_text(x+60,y-30,"State: "+string(state));
//draw_text(x-10, y-84,"facing: "+string(facing));
//draw_set_halign(false);
//draw_set_color(c_purple);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
